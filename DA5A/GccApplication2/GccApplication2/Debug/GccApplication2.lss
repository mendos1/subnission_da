
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001be  00800100  00000e16  00000eaa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e16  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002b  008002be  008002be  00001068  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001068  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00001104  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b0f  00000000  00000000  0000121c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c4d  00000000  00000000  00002d2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b6f  00000000  00000000  00003978  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000290  00000000  00000000  000044e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000066f  00000000  00000000  00004778  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000937  00000000  00000000  00004de7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  0000571e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	12 e0       	ldi	r17, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e1       	ldi	r30, 0x16	; 22
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 3b       	cpi	r26, 0xBE	; 190
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	ae eb       	ldi	r26, 0xBE	; 190
  8e:	b2 e0       	ldi	r27, 0x02	; 2
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a9 3e       	cpi	r26, 0xE9	; 233
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 04 01 	call	0x208	; 0x208 <main>
  9e:	0c 94 09 07 	jmp	0xe12	; 0xe12 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_1>:
		ADCSRA |= (1<<ADSC);
		while(ADCSRA & (1<<ADSC));
		ADC_TEMP+= ADC;
		_delay_ms(50);
	}
	ADC_TEMP = ADC_TEMP/8 ; // Average
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	80 93 bf 02 	sts	0x02BF, r24	; 0x8002bf <message_received>
  b8:	8f 91       	pop	r24
  ba:	0f 90       	pop	r0
  bc:	0f be       	out	0x3f, r0	; 63
  be:	0f 90       	pop	r0
  c0:	1f 90       	pop	r1
  c2:	18 95       	reti

000000c4 <print_config>:
}



void print_config(void)
{
  c4:	cf 93       	push	r28
  c6:	df 93       	push	r29
  c8:	1f 92       	push	r1
  ca:	cd b7       	in	r28, 0x3d	; 61
  cc:	de b7       	in	r29, 0x3e	; 62
	uint8_t data;
	printf("Startup successful\n\n nRF24L01+ configured as:\n");
  ce:	86 e2       	ldi	r24, 0x26	; 38
  d0:	91 e0       	ldi	r25, 0x01	; 1
  d2:	0e 94 11 04 	call	0x822	; 0x822 <puts>
	printf("-------------------------------------------\n");
  d6:	84 e5       	ldi	r24, 0x54	; 84
  d8:	91 e0       	ldi	r25, 0x01	; 1
  da:	0e 94 11 04 	call	0x822	; 0x822 <puts>
	nrf24_read(CONFIG,&data,1);
  de:	41 e0       	ldi	r20, 0x01	; 1
  e0:	50 e0       	ldi	r21, 0x00	; 0
  e2:	be 01       	movw	r22, r28
  e4:	6f 5f       	subi	r22, 0xFF	; 255
  e6:	7f 4f       	sbci	r23, 0xFF	; 255
  e8:	80 e0       	ldi	r24, 0x00	; 0
  ea:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_read>
	printf("CONFIG			0x%02X\n",data);
  ee:	89 81       	ldd	r24, Y+1	; 0x01
  f0:	1f 92       	push	r1
  f2:	8f 93       	push	r24
  f4:	80 e8       	ldi	r24, 0x80	; 128
  f6:	91 e0       	ldi	r25, 0x01	; 1
  f8:	9f 93       	push	r25
  fa:	8f 93       	push	r24
  fc:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
	nrf24_read(EN_AA,&data,1);
 100:	41 e0       	ldi	r20, 0x01	; 1
 102:	50 e0       	ldi	r21, 0x00	; 0
 104:	be 01       	movw	r22, r28
 106:	6f 5f       	subi	r22, 0xFF	; 255
 108:	7f 4f       	sbci	r23, 0xFF	; 255
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_read>
	printf("EN_AA			0x%02X\n",data);
 110:	89 81       	ldd	r24, Y+1	; 0x01
 112:	1f 92       	push	r1
 114:	8f 93       	push	r24
 116:	81 e9       	ldi	r24, 0x91	; 145
 118:	91 e0       	ldi	r25, 0x01	; 1
 11a:	9f 93       	push	r25
 11c:	8f 93       	push	r24
 11e:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
	nrf24_read(EN_RXADDR,&data,1);
 122:	41 e0       	ldi	r20, 0x01	; 1
 124:	50 e0       	ldi	r21, 0x00	; 0
 126:	be 01       	movw	r22, r28
 128:	6f 5f       	subi	r22, 0xFF	; 255
 12a:	7f 4f       	sbci	r23, 0xFF	; 255
 12c:	82 e0       	ldi	r24, 0x02	; 2
 12e:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_read>
	printf("EN_RXADDR		0x%02X\n",data);
 132:	89 81       	ldd	r24, Y+1	; 0x01
 134:	1f 92       	push	r1
 136:	8f 93       	push	r24
 138:	81 ea       	ldi	r24, 0xA1	; 161
 13a:	91 e0       	ldi	r25, 0x01	; 1
 13c:	9f 93       	push	r25
 13e:	8f 93       	push	r24
 140:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
	nrf24_read(SETUP_RETR,&data,1);
 144:	41 e0       	ldi	r20, 0x01	; 1
 146:	50 e0       	ldi	r21, 0x00	; 0
 148:	be 01       	movw	r22, r28
 14a:	6f 5f       	subi	r22, 0xFF	; 255
 14c:	7f 4f       	sbci	r23, 0xFF	; 255
 14e:	84 e0       	ldi	r24, 0x04	; 4
 150:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_read>
	printf("SETUP_RETR		0x%02X\n",data);
 154:	89 81       	ldd	r24, Y+1	; 0x01
 156:	1f 92       	push	r1
 158:	8f 93       	push	r24
 15a:	84 eb       	ldi	r24, 0xB4	; 180
 15c:	91 e0       	ldi	r25, 0x01	; 1
 15e:	9f 93       	push	r25
 160:	8f 93       	push	r24
 162:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
	nrf24_read(RF_CH,&data,1);
 166:	41 e0       	ldi	r20, 0x01	; 1
 168:	50 e0       	ldi	r21, 0x00	; 0
 16a:	be 01       	movw	r22, r28
 16c:	6f 5f       	subi	r22, 0xFF	; 255
 16e:	7f 4f       	sbci	r23, 0xFF	; 255
 170:	85 e0       	ldi	r24, 0x05	; 5
 172:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_read>
	printf("RF_CH			0x%02X\n",data);
 176:	89 81       	ldd	r24, Y+1	; 0x01
 178:	1f 92       	push	r1
 17a:	8f 93       	push	r24
 17c:	88 ec       	ldi	r24, 0xC8	; 200
 17e:	91 e0       	ldi	r25, 0x01	; 1
 180:	9f 93       	push	r25
 182:	8f 93       	push	r24
 184:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
	nrf24_read(RF_SETUP,&data,1);
 188:	41 e0       	ldi	r20, 0x01	; 1
 18a:	50 e0       	ldi	r21, 0x00	; 0
 18c:	be 01       	movw	r22, r28
 18e:	6f 5f       	subi	r22, 0xFF	; 255
 190:	7f 4f       	sbci	r23, 0xFF	; 255
 192:	86 e0       	ldi	r24, 0x06	; 6
 194:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_read>
	printf("RF_SETUP		0x%02X\n",data);
 198:	89 81       	ldd	r24, Y+1	; 0x01
 19a:	1f 92       	push	r1
 19c:	8f 93       	push	r24
 19e:	88 ed       	ldi	r24, 0xD8	; 216
 1a0:	91 e0       	ldi	r25, 0x01	; 1
 1a2:	9f 93       	push	r25
 1a4:	8f 93       	push	r24
 1a6:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
	nrf24_read(STATUS,&data,1);
 1aa:	41 e0       	ldi	r20, 0x01	; 1
 1ac:	50 e0       	ldi	r21, 0x00	; 0
 1ae:	be 01       	movw	r22, r28
 1b0:	6f 5f       	subi	r22, 0xFF	; 255
 1b2:	7f 4f       	sbci	r23, 0xFF	; 255
 1b4:	87 e0       	ldi	r24, 0x07	; 7
 1b6:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_read>
	printf("STATUS			0x%02X\n",data);
 1ba:	89 81       	ldd	r24, Y+1	; 0x01
 1bc:	1f 92       	push	r1
 1be:	8f 93       	push	r24
 1c0:	8a ee       	ldi	r24, 0xEA	; 234
 1c2:	91 e0       	ldi	r25, 0x01	; 1
 1c4:	9f 93       	push	r25
 1c6:	8f 93       	push	r24
 1c8:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
	nrf24_read(FEATURE,&data,1);
 1cc:	41 e0       	ldi	r20, 0x01	; 1
 1ce:	50 e0       	ldi	r21, 0x00	; 0
 1d0:	be 01       	movw	r22, r28
 1d2:	6f 5f       	subi	r22, 0xFF	; 255
 1d4:	7f 4f       	sbci	r23, 0xFF	; 255
 1d6:	8d e1       	ldi	r24, 0x1D	; 29
 1d8:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_read>
	printf("FEATURE			0x%02X\n",data);
 1dc:	89 81       	ldd	r24, Y+1	; 0x01
 1de:	1f 92       	push	r1
 1e0:	8f 93       	push	r24
 1e2:	8b ef       	ldi	r24, 0xFB	; 251
 1e4:	91 e0       	ldi	r25, 0x01	; 1
 1e6:	9f 93       	push	r25
 1e8:	8f 93       	push	r24
 1ea:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
	printf("-------------------------------------------\n\n");
 1ee:	0f b6       	in	r0, 0x3f	; 63
 1f0:	f8 94       	cli
 1f2:	de bf       	out	0x3e, r29	; 62
 1f4:	0f be       	out	0x3f, r0	; 63
 1f6:	cd bf       	out	0x3d, r28	; 61
 1f8:	8d e0       	ldi	r24, 0x0D	; 13
 1fa:	92 e0       	ldi	r25, 0x02	; 2
 1fc:	0e 94 11 04 	call	0x822	; 0x822 <puts>
}
 200:	0f 90       	pop	r0
 202:	df 91       	pop	r29
 204:	cf 91       	pop	r28
 206:	08 95       	ret

00000208 <main>:
//	Used in IRQ ISR
volatile bool message_received = false;
volatile bool status = false;

int main(void)
{	
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
 20c:	cd b7       	in	r28, 0x3d	; 61
 20e:	de b7       	in	r29, 0x3e	; 62
 210:	a0 97       	sbiw	r28, 0x20	; 32
 212:	0f b6       	in	r0, 0x3f	; 63
 214:	f8 94       	cli
 216:	de bf       	out	0x3e, r29	; 62
 218:	0f be       	out	0x3f, r0	; 63
 21a:	cd bf       	out	0x3d, r28	; 61
	//	Set cliche message to send (message cannot exceed 32 characters)
	char tx_message[32];				// Define string array
	//char *tx_ptr = tx_message;
	strcpy(tx_message,"Hi :) !");	// Copy string into array
 21c:	88 e0       	ldi	r24, 0x08	; 8
 21e:	ea e3       	ldi	r30, 0x3A	; 58
 220:	f2 e0       	ldi	r31, 0x02	; 2
 222:	de 01       	movw	r26, r28
 224:	11 96       	adiw	r26, 0x01	; 1
 226:	01 90       	ld	r0, Z+
 228:	0d 92       	st	X+, r0
 22a:	8a 95       	dec	r24
 22c:	e1 f7       	brne	.-8      	; 0x226 <main+0x1e>
	
	//	Initialize UART
	uart_init();
 22e:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <uart_init>
	
	//	Initialize nRF24L01+ and print configuration info
    nrf24_init();
 232:	0e 94 8c 01 	call	0x318	; 0x318 <nrf24_init>
	print_config();
 236:	0e 94 62 00 	call	0xc4	; 0xc4 <print_config>
	
	//ADC_INIT(); 
	//	Start listening to incoming messages
	printf("start listening\n");
 23a:	82 e4       	ldi	r24, 0x42	; 66
 23c:	92 e0       	ldi	r25, 0x02	; 2
 23e:	0e 94 11 04 	call	0x822	; 0x822 <puts>
	nrf24_start_listening();
 242:	0e 94 b1 02 	call	0x562	; 0x562 <nrf24_start_listening>
	printf("Done listening\n");
 246:	82 e5       	ldi	r24, 0x52	; 82
 248:	92 e0       	ldi	r25, 0x02	; 2
 24a:	0e 94 11 04 	call	0x822	; 0x822 <puts>
	
	ADC_TEMP = 0;
 24e:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <ADC_TEMP+0x1>
 252:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <ADC_TEMP>
		if (message_received)
		{
			printf("inside if condition\n");
			//	Message received, print it
			message_received = false;
			printf("Received message: %s\n",nrf24_read_message());
 256:	05 e7       	ldi	r16, 0x75	; 117
 258:	12 e0       	ldi	r17, 0x02	; 2
			//	Send message as response
			_delay_ms(500);
			status = nrf24_send_message(tx_message);
 25a:	ff 24       	eor	r15, r15
 25c:	f3 94       	inc	r15
			//nrf24_send_message(tx_ptr);
			
			//_delay_ms(100);
			//continue;
			//;
		if (message_received)
 25e:	80 91 bf 02 	lds	r24, 0x02BF	; 0x8002bf <message_received>
 262:	88 23       	and	r24, r24
 264:	e1 f3       	breq	.-8      	; 0x25e <main+0x56>
		{
			printf("inside if condition\n");
 266:	81 e6       	ldi	r24, 0x61	; 97
 268:	92 e0       	ldi	r25, 0x02	; 2
 26a:	0e 94 11 04 	call	0x822	; 0x822 <puts>
			//	Message received, print it
			message_received = false;
 26e:	10 92 bf 02 	sts	0x02BF, r1	; 0x8002bf <message_received>
			printf("Received message: %s\n",nrf24_read_message());
 272:	0e 94 79 03 	call	0x6f2	; 0x6f2 <nrf24_read_message>
 276:	9f 93       	push	r25
 278:	8f 93       	push	r24
 27a:	1f 93       	push	r17
 27c:	0f 93       	push	r16
 27e:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 282:	2f ef       	ldi	r18, 0xFF	; 255
 284:	89 e6       	ldi	r24, 0x69	; 105
 286:	98 e1       	ldi	r25, 0x18	; 24
 288:	21 50       	subi	r18, 0x01	; 1
 28a:	80 40       	sbci	r24, 0x00	; 0
 28c:	90 40       	sbci	r25, 0x00	; 0
 28e:	e1 f7       	brne	.-8      	; 0x288 <main+0x80>
 290:	00 c0       	rjmp	.+0      	; 0x292 <main+0x8a>
 292:	00 00       	nop
			//	Send message as response
			_delay_ms(500);
			status = nrf24_send_message(tx_message);
 294:	ce 01       	movw	r24, r28
 296:	01 96       	adiw	r24, 0x01	; 1
 298:	0e 94 bc 02 	call	0x578	; 0x578 <nrf24_send_message>
 29c:	9f 2d       	mov	r25, r15
 29e:	0f 90       	pop	r0
 2a0:	0f 90       	pop	r0
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	81 11       	cpse	r24, r1
 2a8:	01 c0       	rjmp	.+2      	; 0x2ac <main+0xa4>
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	90 93 be 02 	sts	0x02BE, r25	; 0x8002be <__data_end>
			if (status == true) printf("Message sent successfully\n");
 2b0:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <__data_end>
 2b4:	88 23       	and	r24, r24
 2b6:	99 f2       	breq	.-90     	; 0x25e <main+0x56>
 2b8:	8b e8       	ldi	r24, 0x8B	; 139
 2ba:	92 e0       	ldi	r25, 0x02	; 2
 2bc:	0e 94 11 04 	call	0x822	; 0x822 <puts>
 2c0:	ce cf       	rjmp	.-100    	; 0x25e <main+0x56>

000002c2 <nrf24_send_spi>:
{
	uint8_t config_register;
	nrf24_read(FIFO_STATUS,&config_register,1);
	if (!(config_register & (1 << RX_EMPTY))) return 1;
	return 0;
}
 2c2:	df 92       	push	r13
 2c4:	ef 92       	push	r14
 2c6:	ff 92       	push	r15
 2c8:	0f 93       	push	r16
 2ca:	1f 93       	push	r17
 2cc:	cf 93       	push	r28
 2ce:	df 93       	push	r29
 2d0:	7b 01       	movw	r14, r22
 2d2:	8a 01       	movw	r16, r20
 2d4:	2a 98       	cbi	0x05, 2	; 5
 2d6:	0e 94 c0 03 	call	0x780	; 0x780 <spi_exchange>
 2da:	d8 2e       	mov	r13, r24
 2dc:	01 15       	cp	r16, r1
 2de:	11 05       	cpc	r17, r1
 2e0:	51 f0       	breq	.+20     	; 0x2f6 <nrf24_send_spi+0x34>
 2e2:	e7 01       	movw	r28, r14
 2e4:	0e 0d       	add	r16, r14
 2e6:	1f 1d       	adc	r17, r15
 2e8:	88 81       	ld	r24, Y
 2ea:	0e 94 c0 03 	call	0x780	; 0x780 <spi_exchange>
 2ee:	89 93       	st	Y+, r24
 2f0:	c0 17       	cp	r28, r16
 2f2:	d1 07       	cpc	r29, r17
 2f4:	c9 f7       	brne	.-14     	; 0x2e8 <nrf24_send_spi+0x26>
 2f6:	2a 9a       	sbi	0x05, 2	; 5
 2f8:	8d 2d       	mov	r24, r13
 2fa:	df 91       	pop	r29
 2fc:	cf 91       	pop	r28
 2fe:	1f 91       	pop	r17
 300:	0f 91       	pop	r16
 302:	ff 90       	pop	r15
 304:	ef 90       	pop	r14
 306:	df 90       	pop	r13
 308:	08 95       	ret

0000030a <nrf24_write>:
 30a:	80 62       	ori	r24, 0x20	; 32
 30c:	0e 94 61 01 	call	0x2c2	; 0x2c2 <nrf24_send_spi>
 310:	08 95       	ret

00000312 <nrf24_read>:
 312:	0e 94 61 01 	call	0x2c2	; 0x2c2 <nrf24_send_spi>
 316:	08 95       	ret

00000318 <nrf24_init>:
 318:	0f 93       	push	r16
 31a:	1f 93       	push	r17
 31c:	cf 93       	push	r28
 31e:	df 93       	push	r29
 320:	1f 92       	push	r1
 322:	cd b7       	in	r28, 0x3d	; 61
 324:	de b7       	in	r29, 0x3e	; 62
 326:	f8 94       	cli
 328:	e9 e6       	ldi	r30, 0x69	; 105
 32a:	f0 e0       	ldi	r31, 0x00	; 0
 32c:	80 81       	ld	r24, Z
 32e:	82 60       	ori	r24, 0x02	; 2
 330:	80 83       	st	Z, r24
 332:	e8 9a       	sbi	0x1d, 0	; 29
 334:	78 94       	sei
 336:	21 9a       	sbi	0x04, 1	; 4
 338:	22 9a       	sbi	0x04, 2	; 4
 33a:	2a 9a       	sbi	0x05, 2	; 5
 33c:	29 98       	cbi	0x05, 1	; 5
 33e:	0e 94 b1 03 	call	0x762	; 0x762 <spi_master_init>
 342:	2f ef       	ldi	r18, 0xFF	; 255
 344:	81 ee       	ldi	r24, 0xE1	; 225
 346:	94 e0       	ldi	r25, 0x04	; 4
 348:	21 50       	subi	r18, 0x01	; 1
 34a:	80 40       	sbci	r24, 0x00	; 0
 34c:	90 40       	sbci	r25, 0x00	; 0
 34e:	e1 f7       	brne	.-8      	; 0x348 <nrf24_init+0x30>
 350:	00 c0       	rjmp	.+0      	; 0x352 <nrf24_init+0x3a>
 352:	00 00       	nop
 354:	0f e3       	ldi	r16, 0x3F	; 63
 356:	00 93 e2 02 	sts	0x02E2, r16	; 0x8002e2 <data>
 35a:	41 e0       	ldi	r20, 0x01	; 1
 35c:	50 e0       	ldi	r21, 0x00	; 0
 35e:	62 ee       	ldi	r22, 0xE2	; 226
 360:	72 e0       	ldi	r23, 0x02	; 2
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 368:	10 92 e2 02 	sts	0x02E2, r1	; 0x8002e2 <data>
 36c:	41 e0       	ldi	r20, 0x01	; 1
 36e:	50 e0       	ldi	r21, 0x00	; 0
 370:	62 ee       	ldi	r22, 0xE2	; 226
 372:	72 e0       	ldi	r23, 0x02	; 2
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 37a:	80 ef       	ldi	r24, 0xF0	; 240
 37c:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <data>
 380:	41 e0       	ldi	r20, 0x01	; 1
 382:	50 e0       	ldi	r21, 0x00	; 0
 384:	62 ee       	ldi	r22, 0xE2	; 226
 386:	72 e0       	ldi	r23, 0x02	; 2
 388:	84 e0       	ldi	r24, 0x04	; 4
 38a:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 38e:	10 92 e2 02 	sts	0x02E2, r1	; 0x8002e2 <data>
 392:	41 e0       	ldi	r20, 0x01	; 1
 394:	50 e0       	ldi	r21, 0x00	; 0
 396:	62 ee       	ldi	r22, 0xE2	; 226
 398:	72 e0       	ldi	r23, 0x02	; 2
 39a:	82 e0       	ldi	r24, 0x02	; 2
 39c:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 3a0:	84 e7       	ldi	r24, 0x74	; 116
 3a2:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <data>
 3a6:	41 e0       	ldi	r20, 0x01	; 1
 3a8:	50 e0       	ldi	r21, 0x00	; 0
 3aa:	62 ee       	ldi	r22, 0xE2	; 226
 3ac:	72 e0       	ldi	r23, 0x02	; 2
 3ae:	85 e0       	ldi	r24, 0x05	; 5
 3b0:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 3b4:	8e e0       	ldi	r24, 0x0E	; 14
 3b6:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <data>
 3ba:	41 e0       	ldi	r20, 0x01	; 1
 3bc:	50 e0       	ldi	r21, 0x00	; 0
 3be:	62 ee       	ldi	r22, 0xE2	; 226
 3c0:	72 e0       	ldi	r23, 0x02	; 2
 3c2:	86 e0       	ldi	r24, 0x06	; 6
 3c4:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 3c8:	10 e7       	ldi	r17, 0x70	; 112
 3ca:	10 93 e2 02 	sts	0x02E2, r17	; 0x8002e2 <data>
 3ce:	41 e0       	ldi	r20, 0x01	; 1
 3d0:	50 e0       	ldi	r21, 0x00	; 0
 3d2:	62 ee       	ldi	r22, 0xE2	; 226
 3d4:	72 e0       	ldi	r23, 0x02	; 2
 3d6:	87 e0       	ldi	r24, 0x07	; 7
 3d8:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 3dc:	00 93 e2 02 	sts	0x02E2, r16	; 0x8002e2 <data>
 3e0:	41 e0       	ldi	r20, 0x01	; 1
 3e2:	50 e0       	ldi	r21, 0x00	; 0
 3e4:	62 ee       	ldi	r22, 0xE2	; 226
 3e6:	72 e0       	ldi	r23, 0x02	; 2
 3e8:	8c e1       	ldi	r24, 0x1C	; 28
 3ea:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 3ee:	84 e0       	ldi	r24, 0x04	; 4
 3f0:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <data>
 3f4:	41 e0       	ldi	r20, 0x01	; 1
 3f6:	50 e0       	ldi	r21, 0x00	; 0
 3f8:	62 ee       	ldi	r22, 0xE2	; 226
 3fa:	72 e0       	ldi	r23, 0x02	; 2
 3fc:	8d e1       	ldi	r24, 0x1D	; 29
 3fe:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 402:	19 83       	std	Y+1, r17	; 0x01
 404:	40 e0       	ldi	r20, 0x00	; 0
 406:	50 e0       	ldi	r21, 0x00	; 0
 408:	60 e0       	ldi	r22, 0x00	; 0
 40a:	70 e0       	ldi	r23, 0x00	; 0
 40c:	82 ee       	ldi	r24, 0xE2	; 226
 40e:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 412:	40 e0       	ldi	r20, 0x00	; 0
 414:	50 e0       	ldi	r21, 0x00	; 0
 416:	60 e0       	ldi	r22, 0x00	; 0
 418:	70 e0       	ldi	r23, 0x00	; 0
 41a:	81 ee       	ldi	r24, 0xE1	; 225
 41c:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 420:	45 e0       	ldi	r20, 0x05	; 5
 422:	50 e0       	ldi	r21, 0x00	; 0
 424:	65 e0       	ldi	r22, 0x05	; 5
 426:	71 e0       	ldi	r23, 0x01	; 1
 428:	8a e0       	ldi	r24, 0x0A	; 10
 42a:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 42e:	45 e0       	ldi	r20, 0x05	; 5
 430:	50 e0       	ldi	r21, 0x00	; 0
 432:	60 e0       	ldi	r22, 0x00	; 0
 434:	71 e0       	ldi	r23, 0x01	; 1
 436:	80 e1       	ldi	r24, 0x10	; 16
 438:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 43c:	41 e0       	ldi	r20, 0x01	; 1
 43e:	50 e0       	ldi	r21, 0x00	; 0
 440:	be 01       	movw	r22, r28
 442:	6f 5f       	subi	r22, 0xFF	; 255
 444:	7f 4f       	sbci	r23, 0xFF	; 255
 446:	82 e0       	ldi	r24, 0x02	; 2
 448:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 44c:	89 81       	ldd	r24, Y+1	; 0x01
 44e:	81 60       	ori	r24, 0x01	; 1
 450:	89 83       	std	Y+1, r24	; 0x01
 452:	41 e0       	ldi	r20, 0x01	; 1
 454:	50 e0       	ldi	r21, 0x00	; 0
 456:	be 01       	movw	r22, r28
 458:	6f 5f       	subi	r22, 0xFF	; 255
 45a:	7f 4f       	sbci	r23, 0xFF	; 255
 45c:	82 e0       	ldi	r24, 0x02	; 2
 45e:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 462:	0f 90       	pop	r0
 464:	df 91       	pop	r29
 466:	cf 91       	pop	r28
 468:	1f 91       	pop	r17
 46a:	0f 91       	pop	r16
 46c:	08 95       	ret

0000046e <nrf24_state>:
 46e:	1f 93       	push	r17
 470:	cf 93       	push	r28
 472:	df 93       	push	r29
 474:	1f 92       	push	r1
 476:	cd b7       	in	r28, 0x3d	; 61
 478:	de b7       	in	r29, 0x3e	; 62
 47a:	18 2f       	mov	r17, r24
 47c:	41 e0       	ldi	r20, 0x01	; 1
 47e:	50 e0       	ldi	r21, 0x00	; 0
 480:	be 01       	movw	r22, r28
 482:	6f 5f       	subi	r22, 0xFF	; 255
 484:	7f 4f       	sbci	r23, 0xFF	; 255
 486:	80 e0       	ldi	r24, 0x00	; 0
 488:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_read>
 48c:	13 30       	cpi	r17, 0x03	; 3
 48e:	71 f1       	breq	.+92     	; 0x4ec <nrf24_state+0x7e>
 490:	28 f4       	brcc	.+10     	; 0x49c <nrf24_state+0x2e>
 492:	11 30       	cpi	r17, 0x01	; 1
 494:	59 f0       	breq	.+22     	; 0x4ac <nrf24_state+0x3e>
 496:	12 30       	cpi	r17, 0x02	; 2
 498:	e9 f0       	breq	.+58     	; 0x4d4 <nrf24_state+0x66>
 49a:	5e c0       	rjmp	.+188    	; 0x558 <nrf24_state+0xea>
 49c:	15 30       	cpi	r17, 0x05	; 5
 49e:	09 f4       	brne	.+2      	; 0x4a2 <nrf24_state+0x34>
 4a0:	47 c0       	rjmp	.+142    	; 0x530 <nrf24_state+0xc2>
 4a2:	d0 f1       	brcs	.+116    	; 0x518 <nrf24_state+0xaa>
 4a4:	16 30       	cpi	r17, 0x06	; 6
 4a6:	09 f4       	brne	.+2      	; 0x4aa <nrf24_state+0x3c>
 4a8:	45 c0       	rjmp	.+138    	; 0x534 <nrf24_state+0xc6>
 4aa:	56 c0       	rjmp	.+172    	; 0x558 <nrf24_state+0xea>
 4ac:	89 81       	ldd	r24, Y+1	; 0x01
 4ae:	81 fd       	sbrc	r24, 1
 4b0:	53 c0       	rjmp	.+166    	; 0x558 <nrf24_state+0xea>
 4b2:	82 60       	ori	r24, 0x02	; 2
 4b4:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <data>
 4b8:	41 e0       	ldi	r20, 0x01	; 1
 4ba:	50 e0       	ldi	r21, 0x00	; 0
 4bc:	62 ee       	ldi	r22, 0xE2	; 226
 4be:	72 e0       	ldi	r23, 0x02	; 2
 4c0:	80 e0       	ldi	r24, 0x00	; 0
 4c2:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 4c6:	8f e3       	ldi	r24, 0x3F	; 63
 4c8:	9f e1       	ldi	r25, 0x1F	; 31
 4ca:	01 97       	sbiw	r24, 0x01	; 1
 4cc:	f1 f7       	brne	.-4      	; 0x4ca <nrf24_state+0x5c>
 4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <nrf24_state+0x62>
 4d0:	00 00       	nop
 4d2:	42 c0       	rjmp	.+132    	; 0x558 <nrf24_state+0xea>
 4d4:	89 81       	ldd	r24, Y+1	; 0x01
 4d6:	8d 7f       	andi	r24, 0xFD	; 253
 4d8:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <data>
 4dc:	41 e0       	ldi	r20, 0x01	; 1
 4de:	50 e0       	ldi	r21, 0x00	; 0
 4e0:	62 ee       	ldi	r22, 0xE2	; 226
 4e2:	72 e0       	ldi	r23, 0x02	; 2
 4e4:	80 e0       	ldi	r24, 0x00	; 0
 4e6:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 4ea:	36 c0       	rjmp	.+108    	; 0x558 <nrf24_state+0xea>
 4ec:	89 81       	ldd	r24, Y+1	; 0x01
 4ee:	81 60       	ori	r24, 0x01	; 1
 4f0:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <data>
 4f4:	41 e0       	ldi	r20, 0x01	; 1
 4f6:	50 e0       	ldi	r21, 0x00	; 0
 4f8:	62 ee       	ldi	r22, 0xE2	; 226
 4fa:	72 e0       	ldi	r23, 0x02	; 2
 4fc:	80 e0       	ldi	r24, 0x00	; 0
 4fe:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 502:	80 e7       	ldi	r24, 0x70	; 112
 504:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <data>
 508:	41 e0       	ldi	r20, 0x01	; 1
 50a:	50 e0       	ldi	r21, 0x00	; 0
 50c:	62 ee       	ldi	r22, 0xE2	; 226
 50e:	72 e0       	ldi	r23, 0x02	; 2
 510:	87 e0       	ldi	r24, 0x07	; 7
 512:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 516:	20 c0       	rjmp	.+64     	; 0x558 <nrf24_state+0xea>
 518:	89 81       	ldd	r24, Y+1	; 0x01
 51a:	8e 7f       	andi	r24, 0xFE	; 254
 51c:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <data>
 520:	41 e0       	ldi	r20, 0x01	; 1
 522:	50 e0       	ldi	r21, 0x00	; 0
 524:	62 ee       	ldi	r22, 0xE2	; 226
 526:	72 e0       	ldi	r23, 0x02	; 2
 528:	80 e0       	ldi	r24, 0x00	; 0
 52a:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 52e:	14 c0       	rjmp	.+40     	; 0x558 <nrf24_state+0xea>
 530:	29 98       	cbi	0x05, 1	; 5
 532:	12 c0       	rjmp	.+36     	; 0x558 <nrf24_state+0xea>
 534:	89 81       	ldd	r24, Y+1	; 0x01
 536:	8e 7f       	andi	r24, 0xFE	; 254
 538:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <data>
 53c:	41 e0       	ldi	r20, 0x01	; 1
 53e:	50 e0       	ldi	r21, 0x00	; 0
 540:	62 ee       	ldi	r22, 0xE2	; 226
 542:	72 e0       	ldi	r23, 0x02	; 2
 544:	80 e0       	ldi	r24, 0x00	; 0
 546:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 54a:	29 9a       	sbi	0x05, 1	; 5
 54c:	87 e5       	ldi	r24, 0x57	; 87
 54e:	92 e0       	ldi	r25, 0x02	; 2
 550:	01 97       	sbiw	r24, 0x01	; 1
 552:	f1 f7       	brne	.-4      	; 0x550 <nrf24_state+0xe2>
 554:	00 c0       	rjmp	.+0      	; 0x556 <nrf24_state+0xe8>
 556:	00 00       	nop
 558:	0f 90       	pop	r0
 55a:	df 91       	pop	r29
 55c:	cf 91       	pop	r28
 55e:	1f 91       	pop	r17
 560:	08 95       	ret

00000562 <nrf24_start_listening>:
 562:	83 e0       	ldi	r24, 0x03	; 3
 564:	0e 94 37 02 	call	0x46e	; 0x46e <nrf24_state>
 568:	29 9a       	sbi	0x05, 1	; 5
 56a:	87 e5       	ldi	r24, 0x57	; 87
 56c:	92 e0       	ldi	r25, 0x02	; 2
 56e:	01 97       	sbiw	r24, 0x01	; 1
 570:	f1 f7       	brne	.-4      	; 0x56e <nrf24_start_listening+0xc>
 572:	00 c0       	rjmp	.+0      	; 0x574 <nrf24_start_listening+0x12>
 574:	00 00       	nop
 576:	08 95       	ret

00000578 <nrf24_send_message>:
 578:	cf 92       	push	r12
 57a:	df 92       	push	r13
 57c:	ef 92       	push	r14
 57e:	ff 92       	push	r15
 580:	0f 93       	push	r16
 582:	1f 93       	push	r17
 584:	cf 93       	push	r28
 586:	df 93       	push	r29
 588:	cd b7       	in	r28, 0x3d	; 61
 58a:	de b7       	in	r29, 0x3e	; 62
 58c:	a0 97       	sbiw	r28, 0x20	; 32
 58e:	0f b6       	in	r0, 0x3f	; 63
 590:	f8 94       	cli
 592:	de bf       	out	0x3e, r29	; 62
 594:	0f be       	out	0x3f, r0	; 63
 596:	cd bf       	out	0x3d, r28	; 61
 598:	6c 01       	movw	r12, r24
 59a:	68 94       	set
 59c:	ff 24       	eor	r15, r15
 59e:	f5 f8       	bld	r15, 5
 5a0:	ce 01       	movw	r24, r28
 5a2:	01 96       	adiw	r24, 0x01	; 1
 5a4:	fc 01       	movw	r30, r24
 5a6:	2f 2d       	mov	r18, r15
 5a8:	11 92       	st	Z+, r1
 5aa:	2a 95       	dec	r18
 5ac:	e9 f7       	brne	.-6      	; 0x5a8 <nrf24_send_message+0x30>
 5ae:	b6 01       	movw	r22, r12
 5b0:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <strcpy>
 5b4:	f6 01       	movw	r30, r12
 5b6:	01 90       	ld	r0, Z+
 5b8:	00 20       	and	r0, r0
 5ba:	e9 f7       	brne	.-6      	; 0x5b6 <nrf24_send_message+0x3e>
 5bc:	31 97       	sbiw	r30, 0x01	; 1
 5be:	8f 01       	movw	r16, r30
 5c0:	0c 19       	sub	r16, r12
 5c2:	1d 09       	sbc	r17, r13
 5c4:	84 e0       	ldi	r24, 0x04	; 4
 5c6:	0e 94 37 02 	call	0x46e	; 0x46e <nrf24_state>
 5ca:	40 e0       	ldi	r20, 0x00	; 0
 5cc:	50 e0       	ldi	r21, 0x00	; 0
 5ce:	60 e0       	ldi	r22, 0x00	; 0
 5d0:	70 e0       	ldi	r23, 0x00	; 0
 5d2:	82 ee       	ldi	r24, 0xE2	; 226
 5d4:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 5d8:	40 e0       	ldi	r20, 0x00	; 0
 5da:	50 e0       	ldi	r21, 0x00	; 0
 5dc:	60 e0       	ldi	r22, 0x00	; 0
 5de:	70 e0       	ldi	r23, 0x00	; 0
 5e0:	81 ee       	ldi	r24, 0xE1	; 225
 5e2:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 5e6:	f0 92 e2 02 	sts	0x02E2, r15	; 0x8002e2 <data>
 5ea:	41 e0       	ldi	r20, 0x01	; 1
 5ec:	50 e0       	ldi	r21, 0x00	; 0
 5ee:	62 ee       	ldi	r22, 0xE2	; 226
 5f0:	72 e0       	ldi	r23, 0x02	; 2
 5f2:	87 e0       	ldi	r24, 0x07	; 7
 5f4:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 5f8:	41 e0       	ldi	r20, 0x01	; 1
 5fa:	50 e0       	ldi	r21, 0x00	; 0
 5fc:	62 ee       	ldi	r22, 0xE2	; 226
 5fe:	72 e0       	ldi	r23, 0x02	; 2
 600:	80 e0       	ldi	r24, 0x00	; 0
 602:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_read>
 606:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <data>
 60a:	80 64       	ori	r24, 0x40	; 64
 60c:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <data>
 610:	41 e0       	ldi	r20, 0x01	; 1
 612:	50 e0       	ldi	r21, 0x00	; 0
 614:	62 ee       	ldi	r22, 0xE2	; 226
 616:	72 e0       	ldi	r23, 0x02	; 2
 618:	80 e0       	ldi	r24, 0x00	; 0
 61a:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 61e:	2a 98       	cbi	0x05, 2	; 5
 620:	80 eb       	ldi	r24, 0xB0	; 176
 622:	0e 94 bb 03 	call	0x776	; 0x776 <spi_send>
 626:	ef ef       	ldi	r30, 0xFF	; 255
 628:	e0 0f       	add	r30, r16
 62a:	00 23       	and	r16, r16
 62c:	81 f0       	breq	.+32     	; 0x64e <nrf24_send_message+0xd6>
 62e:	86 01       	movw	r16, r12
 630:	ee 2e       	mov	r14, r30
 632:	f1 2c       	mov	r15, r1
 634:	f7 01       	movw	r30, r14
 636:	31 96       	adiw	r30, 0x01	; 1
 638:	76 01       	movw	r14, r12
 63a:	ee 0e       	add	r14, r30
 63c:	ff 1e       	adc	r15, r31
 63e:	f8 01       	movw	r30, r16
 640:	81 91       	ld	r24, Z+
 642:	8f 01       	movw	r16, r30
 644:	0e 94 bb 03 	call	0x776	; 0x776 <spi_send>
 648:	0e 15       	cp	r16, r14
 64a:	1f 05       	cpc	r17, r15
 64c:	c1 f7       	brne	.-16     	; 0x63e <nrf24_send_message+0xc6>
 64e:	80 e0       	ldi	r24, 0x00	; 0
 650:	0e 94 bb 03 	call	0x776	; 0x776 <spi_send>
 654:	2a 9a       	sbi	0x05, 2	; 5
 656:	29 9a       	sbi	0x05, 1	; 5
 658:	f0 e5       	ldi	r31, 0x50	; 80
 65a:	fa 95       	dec	r31
 65c:	f1 f7       	brne	.-4      	; 0x65a <nrf24_send_message+0xe2>
 65e:	29 98       	cbi	0x05, 1	; 5
 660:	41 e0       	ldi	r20, 0x01	; 1
 662:	50 e0       	ldi	r21, 0x00	; 0
 664:	62 ee       	ldi	r22, 0xE2	; 226
 666:	72 e0       	ldi	r23, 0x02	; 2
 668:	87 e0       	ldi	r24, 0x07	; 7
 66a:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_read>
 66e:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <data>
 672:	85 fd       	sbrc	r24, 5
 674:	0b c0       	rjmp	.+22     	; 0x68c <nrf24_send_message+0x114>
 676:	41 e0       	ldi	r20, 0x01	; 1
 678:	50 e0       	ldi	r21, 0x00	; 0
 67a:	62 ee       	ldi	r22, 0xE2	; 226
 67c:	72 e0       	ldi	r23, 0x02	; 2
 67e:	87 e0       	ldi	r24, 0x07	; 7
 680:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_read>
 684:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <data>
 688:	85 ff       	sbrs	r24, 5
 68a:	f5 cf       	rjmp	.-22     	; 0x676 <nrf24_send_message+0xfe>
 68c:	ce 01       	movw	r24, r28
 68e:	01 96       	adiw	r24, 0x01	; 1
 690:	9f 93       	push	r25
 692:	8f 93       	push	r24
 694:	85 ea       	ldi	r24, 0xA5	; 165
 696:	92 e0       	ldi	r25, 0x02	; 2
 698:	9f 93       	push	r25
 69a:	8f 93       	push	r24
 69c:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
 6a0:	41 e0       	ldi	r20, 0x01	; 1
 6a2:	50 e0       	ldi	r21, 0x00	; 0
 6a4:	62 ee       	ldi	r22, 0xE2	; 226
 6a6:	72 e0       	ldi	r23, 0x02	; 2
 6a8:	80 e0       	ldi	r24, 0x00	; 0
 6aa:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_read>
 6ae:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <data>
 6b2:	8f 7b       	andi	r24, 0xBF	; 191
 6b4:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <data>
 6b8:	41 e0       	ldi	r20, 0x01	; 1
 6ba:	50 e0       	ldi	r21, 0x00	; 0
 6bc:	62 ee       	ldi	r22, 0xE2	; 226
 6be:	72 e0       	ldi	r23, 0x02	; 2
 6c0:	80 e0       	ldi	r24, 0x00	; 0
 6c2:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
 6c6:	0e 94 b1 02 	call	0x562	; 0x562 <nrf24_start_listening>
 6ca:	0f 90       	pop	r0
 6cc:	0f 90       	pop	r0
 6ce:	0f 90       	pop	r0
 6d0:	0f 90       	pop	r0
 6d2:	81 e0       	ldi	r24, 0x01	; 1
 6d4:	a0 96       	adiw	r28, 0x20	; 32
 6d6:	0f b6       	in	r0, 0x3f	; 63
 6d8:	f8 94       	cli
 6da:	de bf       	out	0x3e, r29	; 62
 6dc:	0f be       	out	0x3f, r0	; 63
 6de:	cd bf       	out	0x3d, r28	; 61
 6e0:	df 91       	pop	r29
 6e2:	cf 91       	pop	r28
 6e4:	1f 91       	pop	r17
 6e6:	0f 91       	pop	r16
 6e8:	ff 90       	pop	r15
 6ea:	ef 90       	pop	r14
 6ec:	df 90       	pop	r13
 6ee:	cf 90       	pop	r12
 6f0:	08 95       	ret

000006f2 <nrf24_read_message>:

const char * nrf24_read_message(void)
{
	// Message placeholder
	static char rx_message[32];
	memset(rx_message,0,32);
 6f2:	80 e2       	ldi	r24, 0x20	; 32
 6f4:	e0 ec       	ldi	r30, 0xC0	; 192
 6f6:	f2 e0       	ldi	r31, 0x02	; 2
 6f8:	df 01       	movw	r26, r30
 6fa:	1d 92       	st	X+, r1
 6fc:	8a 95       	dec	r24
 6fe:	e9 f7       	brne	.-6      	; 0x6fa <nrf24_read_message+0x8>
	
	// Write ACK message
	if (AUTO_ACK) nrf24_write_ack();
	
	// Get length of incoming message
	nrf24_read(R_RX_PL_WID,&data,1);
 700:	41 e0       	ldi	r20, 0x01	; 1
 702:	50 e0       	ldi	r21, 0x00	; 0
 704:	62 ee       	ldi	r22, 0xE2	; 226
 706:	72 e0       	ldi	r23, 0x02	; 2
 708:	80 e6       	ldi	r24, 0x60	; 96
 70a:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_read>
	
	// Read message
	if (data > 0) nrf24_send_spi(R_RX_PAYLOAD,&rx_message,data+1);
 70e:	40 91 e2 02 	lds	r20, 0x02E2	; 0x8002e2 <data>
 712:	44 23       	and	r20, r20
 714:	41 f0       	breq	.+16     	; 0x726 <nrf24_read_message+0x34>
 716:	50 e0       	ldi	r21, 0x00	; 0
 718:	4f 5f       	subi	r20, 0xFF	; 255
 71a:	5f 4f       	sbci	r21, 0xFF	; 255
 71c:	60 ec       	ldi	r22, 0xC0	; 192
 71e:	72 e0       	ldi	r23, 0x02	; 2
 720:	81 e6       	ldi	r24, 0x61	; 97
 722:	0e 94 61 01 	call	0x2c2	; 0x2c2 <nrf24_send_spi>

	// Check if there is message in array
	if (strlen(rx_message) > 0)
 726:	80 91 c0 02 	lds	r24, 0x02C0	; 0x8002c0 <rx_message.2167>
 72a:	88 23       	and	r24, r24
 72c:	69 f0       	breq	.+26     	; 0x748 <nrf24_read_message+0x56>
	{
		// Clear RX interrupt
		data = (1 << RX_DR);
 72e:	80 e4       	ldi	r24, 0x40	; 64
 730:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <data>
		nrf24_write(STATUS,&data,1);
 734:	41 e0       	ldi	r20, 0x01	; 1
 736:	50 e0       	ldi	r21, 0x00	; 0
 738:	62 ee       	ldi	r22, 0xE2	; 226
 73a:	72 e0       	ldi	r23, 0x02	; 2
 73c:	87 e0       	ldi	r24, 0x07	; 7
 73e:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
		
		return rx_message;
 742:	80 ec       	ldi	r24, 0xC0	; 192
 744:	92 e0       	ldi	r25, 0x02	; 2
 746:	08 95       	ret
	}
	
	// Clear RX interrupt
	data = (1 << RX_DR);
 748:	80 e4       	ldi	r24, 0x40	; 64
 74a:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <data>
	nrf24_write(STATUS,&data,1);
 74e:	41 e0       	ldi	r20, 0x01	; 1
 750:	50 e0       	ldi	r21, 0x00	; 0
 752:	62 ee       	ldi	r22, 0xE2	; 226
 754:	72 e0       	ldi	r23, 0x02	; 2
 756:	87 e0       	ldi	r24, 0x07	; 7
 758:	0e 94 85 01 	call	0x30a	; 0x30a <nrf24_write>
	
	return "failed";
 75c:	87 eb       	ldi	r24, 0xB7	; 183
 75e:	92 e0       	ldi	r25, 0x02	; 2
}
 760:	08 95       	ret

00000762 <spi_master_init>:
 762:	24 98       	cbi	0x04, 4	; 4
 764:	84 b1       	in	r24, 0x04	; 4
 766:	88 62       	ori	r24, 0x28	; 40
 768:	84 b9       	out	0x04, r24	; 4
 76a:	80 e5       	ldi	r24, 0x50	; 80
 76c:	8c bd       	out	0x2c, r24	; 44
 76e:	8d b5       	in	r24, 0x2d	; 45
 770:	81 60       	ori	r24, 0x01	; 1
 772:	8d bd       	out	0x2d, r24	; 45
 774:	08 95       	ret

00000776 <spi_send>:
 776:	8e bd       	out	0x2e, r24	; 46
 778:	0d b4       	in	r0, 0x2d	; 45
 77a:	07 fe       	sbrs	r0, 7
 77c:	fd cf       	rjmp	.-6      	; 0x778 <spi_send+0x2>
 77e:	08 95       	ret

00000780 <spi_exchange>:
 780:	8e bd       	out	0x2e, r24	; 46
 782:	0d b4       	in	r0, 0x2d	; 45
 784:	07 fe       	sbrs	r0, 7
 786:	fd cf       	rjmp	.-6      	; 0x782 <spi_exchange+0x2>
 788:	8e b5       	in	r24, 0x2e	; 46
 78a:	08 95       	ret

0000078c <uart_putchar>:
 78c:	cf 93       	push	r28
 78e:	c8 2f       	mov	r28, r24
 790:	8a 30       	cpi	r24, 0x0A	; 10
 792:	19 f4       	brne	.+6      	; 0x79a <uart_putchar+0xe>
 794:	8d e0       	ldi	r24, 0x0D	; 13
 796:	0e 94 c6 03 	call	0x78c	; 0x78c <uart_putchar>
 79a:	e0 ec       	ldi	r30, 0xC0	; 192
 79c:	f0 e0       	ldi	r31, 0x00	; 0
 79e:	80 81       	ld	r24, Z
 7a0:	85 ff       	sbrs	r24, 5
 7a2:	fd cf       	rjmp	.-6      	; 0x79e <uart_putchar+0x12>
 7a4:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 7a8:	80 e0       	ldi	r24, 0x00	; 0
 7aa:	90 e0       	ldi	r25, 0x00	; 0
 7ac:	cf 91       	pop	r28
 7ae:	08 95       	ret

000007b0 <uart_getchar>:
 7b0:	e0 ec       	ldi	r30, 0xC0	; 192
 7b2:	f0 e0       	ldi	r31, 0x00	; 0
 7b4:	80 81       	ld	r24, Z
 7b6:	88 23       	and	r24, r24
 7b8:	ec f7       	brge	.-6      	; 0x7b4 <uart_getchar+0x4>
 7ba:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	08 95       	ret

000007c2 <uart_init>:
 7c2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 7c6:	87 e6       	ldi	r24, 0x67	; 103
 7c8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 7cc:	88 e1       	ldi	r24, 0x18	; 24
 7ce:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 7d2:	e3 ee       	ldi	r30, 0xE3	; 227
 7d4:	f2 e0       	ldi	r31, 0x02	; 2
 7d6:	88 e1       	ldi	r24, 0x18	; 24
 7d8:	91 e0       	ldi	r25, 0x01	; 1
 7da:	93 83       	std	Z+3, r25	; 0x03
 7dc:	82 83       	std	Z+2, r24	; 0x02
 7de:	8a e0       	ldi	r24, 0x0A	; 10
 7e0:	91 e0       	ldi	r25, 0x01	; 1
 7e2:	91 83       	std	Z+1, r25	; 0x01
 7e4:	80 83       	st	Z, r24
 7e6:	08 95       	ret

000007e8 <strcpy>:
 7e8:	fb 01       	movw	r30, r22
 7ea:	dc 01       	movw	r26, r24
 7ec:	01 90       	ld	r0, Z+
 7ee:	0d 92       	st	X+, r0
 7f0:	00 20       	and	r0, r0
 7f2:	e1 f7       	brne	.-8      	; 0x7ec <strcpy+0x4>
 7f4:	08 95       	ret

000007f6 <printf>:
 7f6:	a0 e0       	ldi	r26, 0x00	; 0
 7f8:	b0 e0       	ldi	r27, 0x00	; 0
 7fa:	e1 e0       	ldi	r30, 0x01	; 1
 7fc:	f4 e0       	ldi	r31, 0x04	; 4
 7fe:	0c 94 e2 06 	jmp	0xdc4	; 0xdc4 <__prologue_saves__+0x20>
 802:	ae 01       	movw	r20, r28
 804:	4b 5f       	subi	r20, 0xFB	; 251
 806:	5f 4f       	sbci	r21, 0xFF	; 255
 808:	fa 01       	movw	r30, r20
 80a:	61 91       	ld	r22, Z+
 80c:	71 91       	ld	r23, Z+
 80e:	af 01       	movw	r20, r30
 810:	80 91 e5 02 	lds	r24, 0x02E5	; 0x8002e5 <__iob+0x2>
 814:	90 91 e6 02 	lds	r25, 0x02E6	; 0x8002e6 <__iob+0x3>
 818:	0e 94 41 04 	call	0x882	; 0x882 <vfprintf>
 81c:	e2 e0       	ldi	r30, 0x02	; 2
 81e:	0c 94 fe 06 	jmp	0xdfc	; 0xdfc <__epilogue_restores__+0x20>

00000822 <puts>:
 822:	0f 93       	push	r16
 824:	1f 93       	push	r17
 826:	cf 93       	push	r28
 828:	df 93       	push	r29
 82a:	e0 91 e5 02 	lds	r30, 0x02E5	; 0x8002e5 <__iob+0x2>
 82e:	f0 91 e6 02 	lds	r31, 0x02E6	; 0x8002e6 <__iob+0x3>
 832:	23 81       	ldd	r18, Z+3	; 0x03
 834:	21 ff       	sbrs	r18, 1
 836:	1b c0       	rjmp	.+54     	; 0x86e <puts+0x4c>
 838:	8c 01       	movw	r16, r24
 83a:	d0 e0       	ldi	r29, 0x00	; 0
 83c:	c0 e0       	ldi	r28, 0x00	; 0
 83e:	f8 01       	movw	r30, r16
 840:	81 91       	ld	r24, Z+
 842:	8f 01       	movw	r16, r30
 844:	60 91 e5 02 	lds	r22, 0x02E5	; 0x8002e5 <__iob+0x2>
 848:	70 91 e6 02 	lds	r23, 0x02E6	; 0x8002e6 <__iob+0x3>
 84c:	db 01       	movw	r26, r22
 84e:	18 96       	adiw	r26, 0x08	; 8
 850:	ed 91       	ld	r30, X+
 852:	fc 91       	ld	r31, X
 854:	19 97       	sbiw	r26, 0x09	; 9
 856:	88 23       	and	r24, r24
 858:	31 f0       	breq	.+12     	; 0x866 <puts+0x44>
 85a:	09 95       	icall
 85c:	89 2b       	or	r24, r25
 85e:	79 f3       	breq	.-34     	; 0x83e <puts+0x1c>
 860:	df ef       	ldi	r29, 0xFF	; 255
 862:	cf ef       	ldi	r28, 0xFF	; 255
 864:	ec cf       	rjmp	.-40     	; 0x83e <puts+0x1c>
 866:	8a e0       	ldi	r24, 0x0A	; 10
 868:	09 95       	icall
 86a:	89 2b       	or	r24, r25
 86c:	19 f0       	breq	.+6      	; 0x874 <puts+0x52>
 86e:	8f ef       	ldi	r24, 0xFF	; 255
 870:	9f ef       	ldi	r25, 0xFF	; 255
 872:	02 c0       	rjmp	.+4      	; 0x878 <puts+0x56>
 874:	8d 2f       	mov	r24, r29
 876:	9c 2f       	mov	r25, r28
 878:	df 91       	pop	r29
 87a:	cf 91       	pop	r28
 87c:	1f 91       	pop	r17
 87e:	0f 91       	pop	r16
 880:	08 95       	ret

00000882 <vfprintf>:
 882:	ab e0       	ldi	r26, 0x0B	; 11
 884:	b0 e0       	ldi	r27, 0x00	; 0
 886:	e7 e4       	ldi	r30, 0x47	; 71
 888:	f4 e0       	ldi	r31, 0x04	; 4
 88a:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__prologue_saves__>
 88e:	6c 01       	movw	r12, r24
 890:	7b 01       	movw	r14, r22
 892:	8a 01       	movw	r16, r20
 894:	fc 01       	movw	r30, r24
 896:	17 82       	std	Z+7, r1	; 0x07
 898:	16 82       	std	Z+6, r1	; 0x06
 89a:	83 81       	ldd	r24, Z+3	; 0x03
 89c:	81 ff       	sbrs	r24, 1
 89e:	cc c1       	rjmp	.+920    	; 0xc38 <__stack+0x339>
 8a0:	ce 01       	movw	r24, r28
 8a2:	01 96       	adiw	r24, 0x01	; 1
 8a4:	3c 01       	movw	r6, r24
 8a6:	f6 01       	movw	r30, r12
 8a8:	93 81       	ldd	r25, Z+3	; 0x03
 8aa:	f7 01       	movw	r30, r14
 8ac:	93 fd       	sbrc	r25, 3
 8ae:	85 91       	lpm	r24, Z+
 8b0:	93 ff       	sbrs	r25, 3
 8b2:	81 91       	ld	r24, Z+
 8b4:	7f 01       	movw	r14, r30
 8b6:	88 23       	and	r24, r24
 8b8:	09 f4       	brne	.+2      	; 0x8bc <vfprintf+0x3a>
 8ba:	ba c1       	rjmp	.+884    	; 0xc30 <__stack+0x331>
 8bc:	85 32       	cpi	r24, 0x25	; 37
 8be:	39 f4       	brne	.+14     	; 0x8ce <vfprintf+0x4c>
 8c0:	93 fd       	sbrc	r25, 3
 8c2:	85 91       	lpm	r24, Z+
 8c4:	93 ff       	sbrs	r25, 3
 8c6:	81 91       	ld	r24, Z+
 8c8:	7f 01       	movw	r14, r30
 8ca:	85 32       	cpi	r24, 0x25	; 37
 8cc:	29 f4       	brne	.+10     	; 0x8d8 <vfprintf+0x56>
 8ce:	b6 01       	movw	r22, r12
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 8d6:	e7 cf       	rjmp	.-50     	; 0x8a6 <vfprintf+0x24>
 8d8:	91 2c       	mov	r9, r1
 8da:	21 2c       	mov	r2, r1
 8dc:	31 2c       	mov	r3, r1
 8de:	ff e1       	ldi	r31, 0x1F	; 31
 8e0:	f3 15       	cp	r31, r3
 8e2:	d8 f0       	brcs	.+54     	; 0x91a <__stack+0x1b>
 8e4:	8b 32       	cpi	r24, 0x2B	; 43
 8e6:	79 f0       	breq	.+30     	; 0x906 <__stack+0x7>
 8e8:	38 f4       	brcc	.+14     	; 0x8f8 <vfprintf+0x76>
 8ea:	80 32       	cpi	r24, 0x20	; 32
 8ec:	79 f0       	breq	.+30     	; 0x90c <__stack+0xd>
 8ee:	83 32       	cpi	r24, 0x23	; 35
 8f0:	a1 f4       	brne	.+40     	; 0x91a <__stack+0x1b>
 8f2:	23 2d       	mov	r18, r3
 8f4:	20 61       	ori	r18, 0x10	; 16
 8f6:	1d c0       	rjmp	.+58     	; 0x932 <__stack+0x33>
 8f8:	8d 32       	cpi	r24, 0x2D	; 45
 8fa:	61 f0       	breq	.+24     	; 0x914 <__stack+0x15>
 8fc:	80 33       	cpi	r24, 0x30	; 48
 8fe:	69 f4       	brne	.+26     	; 0x91a <__stack+0x1b>
 900:	23 2d       	mov	r18, r3
 902:	21 60       	ori	r18, 0x01	; 1
 904:	16 c0       	rjmp	.+44     	; 0x932 <__stack+0x33>
 906:	83 2d       	mov	r24, r3
 908:	82 60       	ori	r24, 0x02	; 2
 90a:	38 2e       	mov	r3, r24
 90c:	e3 2d       	mov	r30, r3
 90e:	e4 60       	ori	r30, 0x04	; 4
 910:	3e 2e       	mov	r3, r30
 912:	2a c0       	rjmp	.+84     	; 0x968 <__stack+0x69>
 914:	f3 2d       	mov	r31, r3
 916:	f8 60       	ori	r31, 0x08	; 8
 918:	1d c0       	rjmp	.+58     	; 0x954 <__stack+0x55>
 91a:	37 fc       	sbrc	r3, 7
 91c:	2d c0       	rjmp	.+90     	; 0x978 <__stack+0x79>
 91e:	20 ed       	ldi	r18, 0xD0	; 208
 920:	28 0f       	add	r18, r24
 922:	2a 30       	cpi	r18, 0x0A	; 10
 924:	40 f0       	brcs	.+16     	; 0x936 <__stack+0x37>
 926:	8e 32       	cpi	r24, 0x2E	; 46
 928:	b9 f4       	brne	.+46     	; 0x958 <__stack+0x59>
 92a:	36 fc       	sbrc	r3, 6
 92c:	81 c1       	rjmp	.+770    	; 0xc30 <__stack+0x331>
 92e:	23 2d       	mov	r18, r3
 930:	20 64       	ori	r18, 0x40	; 64
 932:	32 2e       	mov	r3, r18
 934:	19 c0       	rjmp	.+50     	; 0x968 <__stack+0x69>
 936:	36 fe       	sbrs	r3, 6
 938:	06 c0       	rjmp	.+12     	; 0x946 <__stack+0x47>
 93a:	8a e0       	ldi	r24, 0x0A	; 10
 93c:	98 9e       	mul	r9, r24
 93e:	20 0d       	add	r18, r0
 940:	11 24       	eor	r1, r1
 942:	92 2e       	mov	r9, r18
 944:	11 c0       	rjmp	.+34     	; 0x968 <__stack+0x69>
 946:	ea e0       	ldi	r30, 0x0A	; 10
 948:	2e 9e       	mul	r2, r30
 94a:	20 0d       	add	r18, r0
 94c:	11 24       	eor	r1, r1
 94e:	22 2e       	mov	r2, r18
 950:	f3 2d       	mov	r31, r3
 952:	f0 62       	ori	r31, 0x20	; 32
 954:	3f 2e       	mov	r3, r31
 956:	08 c0       	rjmp	.+16     	; 0x968 <__stack+0x69>
 958:	8c 36       	cpi	r24, 0x6C	; 108
 95a:	21 f4       	brne	.+8      	; 0x964 <__stack+0x65>
 95c:	83 2d       	mov	r24, r3
 95e:	80 68       	ori	r24, 0x80	; 128
 960:	38 2e       	mov	r3, r24
 962:	02 c0       	rjmp	.+4      	; 0x968 <__stack+0x69>
 964:	88 36       	cpi	r24, 0x68	; 104
 966:	41 f4       	brne	.+16     	; 0x978 <__stack+0x79>
 968:	f7 01       	movw	r30, r14
 96a:	93 fd       	sbrc	r25, 3
 96c:	85 91       	lpm	r24, Z+
 96e:	93 ff       	sbrs	r25, 3
 970:	81 91       	ld	r24, Z+
 972:	7f 01       	movw	r14, r30
 974:	81 11       	cpse	r24, r1
 976:	b3 cf       	rjmp	.-154    	; 0x8de <vfprintf+0x5c>
 978:	98 2f       	mov	r25, r24
 97a:	9f 7d       	andi	r25, 0xDF	; 223
 97c:	95 54       	subi	r25, 0x45	; 69
 97e:	93 30       	cpi	r25, 0x03	; 3
 980:	28 f4       	brcc	.+10     	; 0x98c <__stack+0x8d>
 982:	0c 5f       	subi	r16, 0xFC	; 252
 984:	1f 4f       	sbci	r17, 0xFF	; 255
 986:	9f e3       	ldi	r25, 0x3F	; 63
 988:	99 83       	std	Y+1, r25	; 0x01
 98a:	0d c0       	rjmp	.+26     	; 0x9a6 <__stack+0xa7>
 98c:	83 36       	cpi	r24, 0x63	; 99
 98e:	31 f0       	breq	.+12     	; 0x99c <__stack+0x9d>
 990:	83 37       	cpi	r24, 0x73	; 115
 992:	71 f0       	breq	.+28     	; 0x9b0 <__stack+0xb1>
 994:	83 35       	cpi	r24, 0x53	; 83
 996:	09 f0       	breq	.+2      	; 0x99a <__stack+0x9b>
 998:	59 c0       	rjmp	.+178    	; 0xa4c <__stack+0x14d>
 99a:	21 c0       	rjmp	.+66     	; 0x9de <__stack+0xdf>
 99c:	f8 01       	movw	r30, r16
 99e:	80 81       	ld	r24, Z
 9a0:	89 83       	std	Y+1, r24	; 0x01
 9a2:	0e 5f       	subi	r16, 0xFE	; 254
 9a4:	1f 4f       	sbci	r17, 0xFF	; 255
 9a6:	88 24       	eor	r8, r8
 9a8:	83 94       	inc	r8
 9aa:	91 2c       	mov	r9, r1
 9ac:	53 01       	movw	r10, r6
 9ae:	13 c0       	rjmp	.+38     	; 0x9d6 <__stack+0xd7>
 9b0:	28 01       	movw	r4, r16
 9b2:	f2 e0       	ldi	r31, 0x02	; 2
 9b4:	4f 0e       	add	r4, r31
 9b6:	51 1c       	adc	r5, r1
 9b8:	f8 01       	movw	r30, r16
 9ba:	a0 80       	ld	r10, Z
 9bc:	b1 80       	ldd	r11, Z+1	; 0x01
 9be:	36 fe       	sbrs	r3, 6
 9c0:	03 c0       	rjmp	.+6      	; 0x9c8 <__stack+0xc9>
 9c2:	69 2d       	mov	r22, r9
 9c4:	70 e0       	ldi	r23, 0x00	; 0
 9c6:	02 c0       	rjmp	.+4      	; 0x9cc <__stack+0xcd>
 9c8:	6f ef       	ldi	r22, 0xFF	; 255
 9ca:	7f ef       	ldi	r23, 0xFF	; 255
 9cc:	c5 01       	movw	r24, r10
 9ce:	0e 94 2d 06 	call	0xc5a	; 0xc5a <strnlen>
 9d2:	4c 01       	movw	r8, r24
 9d4:	82 01       	movw	r16, r4
 9d6:	f3 2d       	mov	r31, r3
 9d8:	ff 77       	andi	r31, 0x7F	; 127
 9da:	3f 2e       	mov	r3, r31
 9dc:	16 c0       	rjmp	.+44     	; 0xa0a <__stack+0x10b>
 9de:	28 01       	movw	r4, r16
 9e0:	22 e0       	ldi	r18, 0x02	; 2
 9e2:	42 0e       	add	r4, r18
 9e4:	51 1c       	adc	r5, r1
 9e6:	f8 01       	movw	r30, r16
 9e8:	a0 80       	ld	r10, Z
 9ea:	b1 80       	ldd	r11, Z+1	; 0x01
 9ec:	36 fe       	sbrs	r3, 6
 9ee:	03 c0       	rjmp	.+6      	; 0x9f6 <__stack+0xf7>
 9f0:	69 2d       	mov	r22, r9
 9f2:	70 e0       	ldi	r23, 0x00	; 0
 9f4:	02 c0       	rjmp	.+4      	; 0x9fa <__stack+0xfb>
 9f6:	6f ef       	ldi	r22, 0xFF	; 255
 9f8:	7f ef       	ldi	r23, 0xFF	; 255
 9fa:	c5 01       	movw	r24, r10
 9fc:	0e 94 22 06 	call	0xc44	; 0xc44 <strnlen_P>
 a00:	4c 01       	movw	r8, r24
 a02:	f3 2d       	mov	r31, r3
 a04:	f0 68       	ori	r31, 0x80	; 128
 a06:	3f 2e       	mov	r3, r31
 a08:	82 01       	movw	r16, r4
 a0a:	33 fc       	sbrc	r3, 3
 a0c:	1b c0       	rjmp	.+54     	; 0xa44 <__stack+0x145>
 a0e:	82 2d       	mov	r24, r2
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	88 16       	cp	r8, r24
 a14:	99 06       	cpc	r9, r25
 a16:	b0 f4       	brcc	.+44     	; 0xa44 <__stack+0x145>
 a18:	b6 01       	movw	r22, r12
 a1a:	80 e2       	ldi	r24, 0x20	; 32
 a1c:	90 e0       	ldi	r25, 0x00	; 0
 a1e:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 a22:	2a 94       	dec	r2
 a24:	f4 cf       	rjmp	.-24     	; 0xa0e <__stack+0x10f>
 a26:	f5 01       	movw	r30, r10
 a28:	37 fc       	sbrc	r3, 7
 a2a:	85 91       	lpm	r24, Z+
 a2c:	37 fe       	sbrs	r3, 7
 a2e:	81 91       	ld	r24, Z+
 a30:	5f 01       	movw	r10, r30
 a32:	b6 01       	movw	r22, r12
 a34:	90 e0       	ldi	r25, 0x00	; 0
 a36:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 a3a:	21 10       	cpse	r2, r1
 a3c:	2a 94       	dec	r2
 a3e:	21 e0       	ldi	r18, 0x01	; 1
 a40:	82 1a       	sub	r8, r18
 a42:	91 08       	sbc	r9, r1
 a44:	81 14       	cp	r8, r1
 a46:	91 04       	cpc	r9, r1
 a48:	71 f7       	brne	.-36     	; 0xa26 <__stack+0x127>
 a4a:	e8 c0       	rjmp	.+464    	; 0xc1c <__stack+0x31d>
 a4c:	84 36       	cpi	r24, 0x64	; 100
 a4e:	11 f0       	breq	.+4      	; 0xa54 <__stack+0x155>
 a50:	89 36       	cpi	r24, 0x69	; 105
 a52:	41 f5       	brne	.+80     	; 0xaa4 <__stack+0x1a5>
 a54:	f8 01       	movw	r30, r16
 a56:	37 fe       	sbrs	r3, 7
 a58:	07 c0       	rjmp	.+14     	; 0xa68 <__stack+0x169>
 a5a:	60 81       	ld	r22, Z
 a5c:	71 81       	ldd	r23, Z+1	; 0x01
 a5e:	82 81       	ldd	r24, Z+2	; 0x02
 a60:	93 81       	ldd	r25, Z+3	; 0x03
 a62:	0c 5f       	subi	r16, 0xFC	; 252
 a64:	1f 4f       	sbci	r17, 0xFF	; 255
 a66:	08 c0       	rjmp	.+16     	; 0xa78 <__stack+0x179>
 a68:	60 81       	ld	r22, Z
 a6a:	71 81       	ldd	r23, Z+1	; 0x01
 a6c:	07 2e       	mov	r0, r23
 a6e:	00 0c       	add	r0, r0
 a70:	88 0b       	sbc	r24, r24
 a72:	99 0b       	sbc	r25, r25
 a74:	0e 5f       	subi	r16, 0xFE	; 254
 a76:	1f 4f       	sbci	r17, 0xFF	; 255
 a78:	f3 2d       	mov	r31, r3
 a7a:	ff 76       	andi	r31, 0x6F	; 111
 a7c:	3f 2e       	mov	r3, r31
 a7e:	97 ff       	sbrs	r25, 7
 a80:	09 c0       	rjmp	.+18     	; 0xa94 <__stack+0x195>
 a82:	90 95       	com	r25
 a84:	80 95       	com	r24
 a86:	70 95       	com	r23
 a88:	61 95       	neg	r22
 a8a:	7f 4f       	sbci	r23, 0xFF	; 255
 a8c:	8f 4f       	sbci	r24, 0xFF	; 255
 a8e:	9f 4f       	sbci	r25, 0xFF	; 255
 a90:	f0 68       	ori	r31, 0x80	; 128
 a92:	3f 2e       	mov	r3, r31
 a94:	2a e0       	ldi	r18, 0x0A	; 10
 a96:	30 e0       	ldi	r19, 0x00	; 0
 a98:	a3 01       	movw	r20, r6
 a9a:	0e 94 74 06 	call	0xce8	; 0xce8 <__ultoa_invert>
 a9e:	88 2e       	mov	r8, r24
 aa0:	86 18       	sub	r8, r6
 aa2:	45 c0       	rjmp	.+138    	; 0xb2e <__stack+0x22f>
 aa4:	85 37       	cpi	r24, 0x75	; 117
 aa6:	31 f4       	brne	.+12     	; 0xab4 <__stack+0x1b5>
 aa8:	23 2d       	mov	r18, r3
 aaa:	2f 7e       	andi	r18, 0xEF	; 239
 aac:	b2 2e       	mov	r11, r18
 aae:	2a e0       	ldi	r18, 0x0A	; 10
 ab0:	30 e0       	ldi	r19, 0x00	; 0
 ab2:	25 c0       	rjmp	.+74     	; 0xafe <__stack+0x1ff>
 ab4:	93 2d       	mov	r25, r3
 ab6:	99 7f       	andi	r25, 0xF9	; 249
 ab8:	b9 2e       	mov	r11, r25
 aba:	8f 36       	cpi	r24, 0x6F	; 111
 abc:	c1 f0       	breq	.+48     	; 0xaee <__stack+0x1ef>
 abe:	18 f4       	brcc	.+6      	; 0xac6 <__stack+0x1c7>
 ac0:	88 35       	cpi	r24, 0x58	; 88
 ac2:	79 f0       	breq	.+30     	; 0xae2 <__stack+0x1e3>
 ac4:	b5 c0       	rjmp	.+362    	; 0xc30 <__stack+0x331>
 ac6:	80 37       	cpi	r24, 0x70	; 112
 ac8:	19 f0       	breq	.+6      	; 0xad0 <__stack+0x1d1>
 aca:	88 37       	cpi	r24, 0x78	; 120
 acc:	21 f0       	breq	.+8      	; 0xad6 <__stack+0x1d7>
 ace:	b0 c0       	rjmp	.+352    	; 0xc30 <__stack+0x331>
 ad0:	e9 2f       	mov	r30, r25
 ad2:	e0 61       	ori	r30, 0x10	; 16
 ad4:	be 2e       	mov	r11, r30
 ad6:	b4 fe       	sbrs	r11, 4
 ad8:	0d c0       	rjmp	.+26     	; 0xaf4 <__stack+0x1f5>
 ada:	fb 2d       	mov	r31, r11
 adc:	f4 60       	ori	r31, 0x04	; 4
 ade:	bf 2e       	mov	r11, r31
 ae0:	09 c0       	rjmp	.+18     	; 0xaf4 <__stack+0x1f5>
 ae2:	34 fe       	sbrs	r3, 4
 ae4:	0a c0       	rjmp	.+20     	; 0xafa <__stack+0x1fb>
 ae6:	29 2f       	mov	r18, r25
 ae8:	26 60       	ori	r18, 0x06	; 6
 aea:	b2 2e       	mov	r11, r18
 aec:	06 c0       	rjmp	.+12     	; 0xafa <__stack+0x1fb>
 aee:	28 e0       	ldi	r18, 0x08	; 8
 af0:	30 e0       	ldi	r19, 0x00	; 0
 af2:	05 c0       	rjmp	.+10     	; 0xafe <__stack+0x1ff>
 af4:	20 e1       	ldi	r18, 0x10	; 16
 af6:	30 e0       	ldi	r19, 0x00	; 0
 af8:	02 c0       	rjmp	.+4      	; 0xafe <__stack+0x1ff>
 afa:	20 e1       	ldi	r18, 0x10	; 16
 afc:	32 e0       	ldi	r19, 0x02	; 2
 afe:	f8 01       	movw	r30, r16
 b00:	b7 fe       	sbrs	r11, 7
 b02:	07 c0       	rjmp	.+14     	; 0xb12 <__stack+0x213>
 b04:	60 81       	ld	r22, Z
 b06:	71 81       	ldd	r23, Z+1	; 0x01
 b08:	82 81       	ldd	r24, Z+2	; 0x02
 b0a:	93 81       	ldd	r25, Z+3	; 0x03
 b0c:	0c 5f       	subi	r16, 0xFC	; 252
 b0e:	1f 4f       	sbci	r17, 0xFF	; 255
 b10:	06 c0       	rjmp	.+12     	; 0xb1e <__stack+0x21f>
 b12:	60 81       	ld	r22, Z
 b14:	71 81       	ldd	r23, Z+1	; 0x01
 b16:	80 e0       	ldi	r24, 0x00	; 0
 b18:	90 e0       	ldi	r25, 0x00	; 0
 b1a:	0e 5f       	subi	r16, 0xFE	; 254
 b1c:	1f 4f       	sbci	r17, 0xFF	; 255
 b1e:	a3 01       	movw	r20, r6
 b20:	0e 94 74 06 	call	0xce8	; 0xce8 <__ultoa_invert>
 b24:	88 2e       	mov	r8, r24
 b26:	86 18       	sub	r8, r6
 b28:	fb 2d       	mov	r31, r11
 b2a:	ff 77       	andi	r31, 0x7F	; 127
 b2c:	3f 2e       	mov	r3, r31
 b2e:	36 fe       	sbrs	r3, 6
 b30:	0d c0       	rjmp	.+26     	; 0xb4c <__stack+0x24d>
 b32:	23 2d       	mov	r18, r3
 b34:	2e 7f       	andi	r18, 0xFE	; 254
 b36:	a2 2e       	mov	r10, r18
 b38:	89 14       	cp	r8, r9
 b3a:	58 f4       	brcc	.+22     	; 0xb52 <__stack+0x253>
 b3c:	34 fe       	sbrs	r3, 4
 b3e:	0b c0       	rjmp	.+22     	; 0xb56 <__stack+0x257>
 b40:	32 fc       	sbrc	r3, 2
 b42:	09 c0       	rjmp	.+18     	; 0xb56 <__stack+0x257>
 b44:	83 2d       	mov	r24, r3
 b46:	8e 7e       	andi	r24, 0xEE	; 238
 b48:	a8 2e       	mov	r10, r24
 b4a:	05 c0       	rjmp	.+10     	; 0xb56 <__stack+0x257>
 b4c:	b8 2c       	mov	r11, r8
 b4e:	a3 2c       	mov	r10, r3
 b50:	03 c0       	rjmp	.+6      	; 0xb58 <__stack+0x259>
 b52:	b8 2c       	mov	r11, r8
 b54:	01 c0       	rjmp	.+2      	; 0xb58 <__stack+0x259>
 b56:	b9 2c       	mov	r11, r9
 b58:	a4 fe       	sbrs	r10, 4
 b5a:	0f c0       	rjmp	.+30     	; 0xb7a <__stack+0x27b>
 b5c:	fe 01       	movw	r30, r28
 b5e:	e8 0d       	add	r30, r8
 b60:	f1 1d       	adc	r31, r1
 b62:	80 81       	ld	r24, Z
 b64:	80 33       	cpi	r24, 0x30	; 48
 b66:	21 f4       	brne	.+8      	; 0xb70 <__stack+0x271>
 b68:	9a 2d       	mov	r25, r10
 b6a:	99 7e       	andi	r25, 0xE9	; 233
 b6c:	a9 2e       	mov	r10, r25
 b6e:	09 c0       	rjmp	.+18     	; 0xb82 <__stack+0x283>
 b70:	a2 fe       	sbrs	r10, 2
 b72:	06 c0       	rjmp	.+12     	; 0xb80 <__stack+0x281>
 b74:	b3 94       	inc	r11
 b76:	b3 94       	inc	r11
 b78:	04 c0       	rjmp	.+8      	; 0xb82 <__stack+0x283>
 b7a:	8a 2d       	mov	r24, r10
 b7c:	86 78       	andi	r24, 0x86	; 134
 b7e:	09 f0       	breq	.+2      	; 0xb82 <__stack+0x283>
 b80:	b3 94       	inc	r11
 b82:	a3 fc       	sbrc	r10, 3
 b84:	11 c0       	rjmp	.+34     	; 0xba8 <__stack+0x2a9>
 b86:	a0 fe       	sbrs	r10, 0
 b88:	06 c0       	rjmp	.+12     	; 0xb96 <__stack+0x297>
 b8a:	b2 14       	cp	r11, r2
 b8c:	88 f4       	brcc	.+34     	; 0xbb0 <__stack+0x2b1>
 b8e:	28 0c       	add	r2, r8
 b90:	92 2c       	mov	r9, r2
 b92:	9b 18       	sub	r9, r11
 b94:	0e c0       	rjmp	.+28     	; 0xbb2 <__stack+0x2b3>
 b96:	b2 14       	cp	r11, r2
 b98:	60 f4       	brcc	.+24     	; 0xbb2 <__stack+0x2b3>
 b9a:	b6 01       	movw	r22, r12
 b9c:	80 e2       	ldi	r24, 0x20	; 32
 b9e:	90 e0       	ldi	r25, 0x00	; 0
 ba0:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 ba4:	b3 94       	inc	r11
 ba6:	f7 cf       	rjmp	.-18     	; 0xb96 <__stack+0x297>
 ba8:	b2 14       	cp	r11, r2
 baa:	18 f4       	brcc	.+6      	; 0xbb2 <__stack+0x2b3>
 bac:	2b 18       	sub	r2, r11
 bae:	02 c0       	rjmp	.+4      	; 0xbb4 <__stack+0x2b5>
 bb0:	98 2c       	mov	r9, r8
 bb2:	21 2c       	mov	r2, r1
 bb4:	a4 fe       	sbrs	r10, 4
 bb6:	10 c0       	rjmp	.+32     	; 0xbd8 <__stack+0x2d9>
 bb8:	b6 01       	movw	r22, r12
 bba:	80 e3       	ldi	r24, 0x30	; 48
 bbc:	90 e0       	ldi	r25, 0x00	; 0
 bbe:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 bc2:	a2 fe       	sbrs	r10, 2
 bc4:	17 c0       	rjmp	.+46     	; 0xbf4 <__stack+0x2f5>
 bc6:	a1 fc       	sbrc	r10, 1
 bc8:	03 c0       	rjmp	.+6      	; 0xbd0 <__stack+0x2d1>
 bca:	88 e7       	ldi	r24, 0x78	; 120
 bcc:	90 e0       	ldi	r25, 0x00	; 0
 bce:	02 c0       	rjmp	.+4      	; 0xbd4 <__stack+0x2d5>
 bd0:	88 e5       	ldi	r24, 0x58	; 88
 bd2:	90 e0       	ldi	r25, 0x00	; 0
 bd4:	b6 01       	movw	r22, r12
 bd6:	0c c0       	rjmp	.+24     	; 0xbf0 <__stack+0x2f1>
 bd8:	8a 2d       	mov	r24, r10
 bda:	86 78       	andi	r24, 0x86	; 134
 bdc:	59 f0       	breq	.+22     	; 0xbf4 <__stack+0x2f5>
 bde:	a1 fe       	sbrs	r10, 1
 be0:	02 c0       	rjmp	.+4      	; 0xbe6 <__stack+0x2e7>
 be2:	8b e2       	ldi	r24, 0x2B	; 43
 be4:	01 c0       	rjmp	.+2      	; 0xbe8 <__stack+0x2e9>
 be6:	80 e2       	ldi	r24, 0x20	; 32
 be8:	a7 fc       	sbrc	r10, 7
 bea:	8d e2       	ldi	r24, 0x2D	; 45
 bec:	b6 01       	movw	r22, r12
 bee:	90 e0       	ldi	r25, 0x00	; 0
 bf0:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 bf4:	89 14       	cp	r8, r9
 bf6:	38 f4       	brcc	.+14     	; 0xc06 <__stack+0x307>
 bf8:	b6 01       	movw	r22, r12
 bfa:	80 e3       	ldi	r24, 0x30	; 48
 bfc:	90 e0       	ldi	r25, 0x00	; 0
 bfe:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 c02:	9a 94       	dec	r9
 c04:	f7 cf       	rjmp	.-18     	; 0xbf4 <__stack+0x2f5>
 c06:	8a 94       	dec	r8
 c08:	f3 01       	movw	r30, r6
 c0a:	e8 0d       	add	r30, r8
 c0c:	f1 1d       	adc	r31, r1
 c0e:	80 81       	ld	r24, Z
 c10:	b6 01       	movw	r22, r12
 c12:	90 e0       	ldi	r25, 0x00	; 0
 c14:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 c18:	81 10       	cpse	r8, r1
 c1a:	f5 cf       	rjmp	.-22     	; 0xc06 <__stack+0x307>
 c1c:	22 20       	and	r2, r2
 c1e:	09 f4       	brne	.+2      	; 0xc22 <__stack+0x323>
 c20:	42 ce       	rjmp	.-892    	; 0x8a6 <vfprintf+0x24>
 c22:	b6 01       	movw	r22, r12
 c24:	80 e2       	ldi	r24, 0x20	; 32
 c26:	90 e0       	ldi	r25, 0x00	; 0
 c28:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 c2c:	2a 94       	dec	r2
 c2e:	f6 cf       	rjmp	.-20     	; 0xc1c <__stack+0x31d>
 c30:	f6 01       	movw	r30, r12
 c32:	86 81       	ldd	r24, Z+6	; 0x06
 c34:	97 81       	ldd	r25, Z+7	; 0x07
 c36:	02 c0       	rjmp	.+4      	; 0xc3c <__stack+0x33d>
 c38:	8f ef       	ldi	r24, 0xFF	; 255
 c3a:	9f ef       	ldi	r25, 0xFF	; 255
 c3c:	2b 96       	adiw	r28, 0x0b	; 11
 c3e:	e2 e1       	ldi	r30, 0x12	; 18
 c40:	0c 94 ee 06 	jmp	0xddc	; 0xddc <__epilogue_restores__>

00000c44 <strnlen_P>:
 c44:	fc 01       	movw	r30, r24
 c46:	05 90       	lpm	r0, Z+
 c48:	61 50       	subi	r22, 0x01	; 1
 c4a:	70 40       	sbci	r23, 0x00	; 0
 c4c:	01 10       	cpse	r0, r1
 c4e:	d8 f7       	brcc	.-10     	; 0xc46 <strnlen_P+0x2>
 c50:	80 95       	com	r24
 c52:	90 95       	com	r25
 c54:	8e 0f       	add	r24, r30
 c56:	9f 1f       	adc	r25, r31
 c58:	08 95       	ret

00000c5a <strnlen>:
 c5a:	fc 01       	movw	r30, r24
 c5c:	61 50       	subi	r22, 0x01	; 1
 c5e:	70 40       	sbci	r23, 0x00	; 0
 c60:	01 90       	ld	r0, Z+
 c62:	01 10       	cpse	r0, r1
 c64:	d8 f7       	brcc	.-10     	; 0xc5c <strnlen+0x2>
 c66:	80 95       	com	r24
 c68:	90 95       	com	r25
 c6a:	8e 0f       	add	r24, r30
 c6c:	9f 1f       	adc	r25, r31
 c6e:	08 95       	ret

00000c70 <fputc>:
 c70:	0f 93       	push	r16
 c72:	1f 93       	push	r17
 c74:	cf 93       	push	r28
 c76:	df 93       	push	r29
 c78:	fb 01       	movw	r30, r22
 c7a:	23 81       	ldd	r18, Z+3	; 0x03
 c7c:	21 fd       	sbrc	r18, 1
 c7e:	03 c0       	rjmp	.+6      	; 0xc86 <fputc+0x16>
 c80:	8f ef       	ldi	r24, 0xFF	; 255
 c82:	9f ef       	ldi	r25, 0xFF	; 255
 c84:	2c c0       	rjmp	.+88     	; 0xcde <fputc+0x6e>
 c86:	22 ff       	sbrs	r18, 2
 c88:	16 c0       	rjmp	.+44     	; 0xcb6 <fputc+0x46>
 c8a:	46 81       	ldd	r20, Z+6	; 0x06
 c8c:	57 81       	ldd	r21, Z+7	; 0x07
 c8e:	24 81       	ldd	r18, Z+4	; 0x04
 c90:	35 81       	ldd	r19, Z+5	; 0x05
 c92:	42 17       	cp	r20, r18
 c94:	53 07       	cpc	r21, r19
 c96:	44 f4       	brge	.+16     	; 0xca8 <fputc+0x38>
 c98:	a0 81       	ld	r26, Z
 c9a:	b1 81       	ldd	r27, Z+1	; 0x01
 c9c:	9d 01       	movw	r18, r26
 c9e:	2f 5f       	subi	r18, 0xFF	; 255
 ca0:	3f 4f       	sbci	r19, 0xFF	; 255
 ca2:	31 83       	std	Z+1, r19	; 0x01
 ca4:	20 83       	st	Z, r18
 ca6:	8c 93       	st	X, r24
 ca8:	26 81       	ldd	r18, Z+6	; 0x06
 caa:	37 81       	ldd	r19, Z+7	; 0x07
 cac:	2f 5f       	subi	r18, 0xFF	; 255
 cae:	3f 4f       	sbci	r19, 0xFF	; 255
 cb0:	37 83       	std	Z+7, r19	; 0x07
 cb2:	26 83       	std	Z+6, r18	; 0x06
 cb4:	14 c0       	rjmp	.+40     	; 0xcde <fputc+0x6e>
 cb6:	8b 01       	movw	r16, r22
 cb8:	ec 01       	movw	r28, r24
 cba:	fb 01       	movw	r30, r22
 cbc:	00 84       	ldd	r0, Z+8	; 0x08
 cbe:	f1 85       	ldd	r31, Z+9	; 0x09
 cc0:	e0 2d       	mov	r30, r0
 cc2:	09 95       	icall
 cc4:	89 2b       	or	r24, r25
 cc6:	e1 f6       	brne	.-72     	; 0xc80 <fputc+0x10>
 cc8:	d8 01       	movw	r26, r16
 cca:	16 96       	adiw	r26, 0x06	; 6
 ccc:	8d 91       	ld	r24, X+
 cce:	9c 91       	ld	r25, X
 cd0:	17 97       	sbiw	r26, 0x07	; 7
 cd2:	01 96       	adiw	r24, 0x01	; 1
 cd4:	17 96       	adiw	r26, 0x07	; 7
 cd6:	9c 93       	st	X, r25
 cd8:	8e 93       	st	-X, r24
 cda:	16 97       	sbiw	r26, 0x06	; 6
 cdc:	ce 01       	movw	r24, r28
 cde:	df 91       	pop	r29
 ce0:	cf 91       	pop	r28
 ce2:	1f 91       	pop	r17
 ce4:	0f 91       	pop	r16
 ce6:	08 95       	ret

00000ce8 <__ultoa_invert>:
 ce8:	fa 01       	movw	r30, r20
 cea:	aa 27       	eor	r26, r26
 cec:	28 30       	cpi	r18, 0x08	; 8
 cee:	51 f1       	breq	.+84     	; 0xd44 <__ultoa_invert+0x5c>
 cf0:	20 31       	cpi	r18, 0x10	; 16
 cf2:	81 f1       	breq	.+96     	; 0xd54 <__ultoa_invert+0x6c>
 cf4:	e8 94       	clt
 cf6:	6f 93       	push	r22
 cf8:	6e 7f       	andi	r22, 0xFE	; 254
 cfa:	6e 5f       	subi	r22, 0xFE	; 254
 cfc:	7f 4f       	sbci	r23, 0xFF	; 255
 cfe:	8f 4f       	sbci	r24, 0xFF	; 255
 d00:	9f 4f       	sbci	r25, 0xFF	; 255
 d02:	af 4f       	sbci	r26, 0xFF	; 255
 d04:	b1 e0       	ldi	r27, 0x01	; 1
 d06:	3e d0       	rcall	.+124    	; 0xd84 <__ultoa_invert+0x9c>
 d08:	b4 e0       	ldi	r27, 0x04	; 4
 d0a:	3c d0       	rcall	.+120    	; 0xd84 <__ultoa_invert+0x9c>
 d0c:	67 0f       	add	r22, r23
 d0e:	78 1f       	adc	r23, r24
 d10:	89 1f       	adc	r24, r25
 d12:	9a 1f       	adc	r25, r26
 d14:	a1 1d       	adc	r26, r1
 d16:	68 0f       	add	r22, r24
 d18:	79 1f       	adc	r23, r25
 d1a:	8a 1f       	adc	r24, r26
 d1c:	91 1d       	adc	r25, r1
 d1e:	a1 1d       	adc	r26, r1
 d20:	6a 0f       	add	r22, r26
 d22:	71 1d       	adc	r23, r1
 d24:	81 1d       	adc	r24, r1
 d26:	91 1d       	adc	r25, r1
 d28:	a1 1d       	adc	r26, r1
 d2a:	20 d0       	rcall	.+64     	; 0xd6c <__ultoa_invert+0x84>
 d2c:	09 f4       	brne	.+2      	; 0xd30 <__ultoa_invert+0x48>
 d2e:	68 94       	set
 d30:	3f 91       	pop	r19
 d32:	2a e0       	ldi	r18, 0x0A	; 10
 d34:	26 9f       	mul	r18, r22
 d36:	11 24       	eor	r1, r1
 d38:	30 19       	sub	r19, r0
 d3a:	30 5d       	subi	r19, 0xD0	; 208
 d3c:	31 93       	st	Z+, r19
 d3e:	de f6       	brtc	.-74     	; 0xcf6 <__ultoa_invert+0xe>
 d40:	cf 01       	movw	r24, r30
 d42:	08 95       	ret
 d44:	46 2f       	mov	r20, r22
 d46:	47 70       	andi	r20, 0x07	; 7
 d48:	40 5d       	subi	r20, 0xD0	; 208
 d4a:	41 93       	st	Z+, r20
 d4c:	b3 e0       	ldi	r27, 0x03	; 3
 d4e:	0f d0       	rcall	.+30     	; 0xd6e <__ultoa_invert+0x86>
 d50:	c9 f7       	brne	.-14     	; 0xd44 <__ultoa_invert+0x5c>
 d52:	f6 cf       	rjmp	.-20     	; 0xd40 <__ultoa_invert+0x58>
 d54:	46 2f       	mov	r20, r22
 d56:	4f 70       	andi	r20, 0x0F	; 15
 d58:	40 5d       	subi	r20, 0xD0	; 208
 d5a:	4a 33       	cpi	r20, 0x3A	; 58
 d5c:	18 f0       	brcs	.+6      	; 0xd64 <__ultoa_invert+0x7c>
 d5e:	49 5d       	subi	r20, 0xD9	; 217
 d60:	31 fd       	sbrc	r19, 1
 d62:	40 52       	subi	r20, 0x20	; 32
 d64:	41 93       	st	Z+, r20
 d66:	02 d0       	rcall	.+4      	; 0xd6c <__ultoa_invert+0x84>
 d68:	a9 f7       	brne	.-22     	; 0xd54 <__ultoa_invert+0x6c>
 d6a:	ea cf       	rjmp	.-44     	; 0xd40 <__ultoa_invert+0x58>
 d6c:	b4 e0       	ldi	r27, 0x04	; 4
 d6e:	a6 95       	lsr	r26
 d70:	97 95       	ror	r25
 d72:	87 95       	ror	r24
 d74:	77 95       	ror	r23
 d76:	67 95       	ror	r22
 d78:	ba 95       	dec	r27
 d7a:	c9 f7       	brne	.-14     	; 0xd6e <__ultoa_invert+0x86>
 d7c:	00 97       	sbiw	r24, 0x00	; 0
 d7e:	61 05       	cpc	r22, r1
 d80:	71 05       	cpc	r23, r1
 d82:	08 95       	ret
 d84:	9b 01       	movw	r18, r22
 d86:	ac 01       	movw	r20, r24
 d88:	0a 2e       	mov	r0, r26
 d8a:	06 94       	lsr	r0
 d8c:	57 95       	ror	r21
 d8e:	47 95       	ror	r20
 d90:	37 95       	ror	r19
 d92:	27 95       	ror	r18
 d94:	ba 95       	dec	r27
 d96:	c9 f7       	brne	.-14     	; 0xd8a <__ultoa_invert+0xa2>
 d98:	62 0f       	add	r22, r18
 d9a:	73 1f       	adc	r23, r19
 d9c:	84 1f       	adc	r24, r20
 d9e:	95 1f       	adc	r25, r21
 da0:	a0 1d       	adc	r26, r0
 da2:	08 95       	ret

00000da4 <__prologue_saves__>:
 da4:	2f 92       	push	r2
 da6:	3f 92       	push	r3
 da8:	4f 92       	push	r4
 daa:	5f 92       	push	r5
 dac:	6f 92       	push	r6
 dae:	7f 92       	push	r7
 db0:	8f 92       	push	r8
 db2:	9f 92       	push	r9
 db4:	af 92       	push	r10
 db6:	bf 92       	push	r11
 db8:	cf 92       	push	r12
 dba:	df 92       	push	r13
 dbc:	ef 92       	push	r14
 dbe:	ff 92       	push	r15
 dc0:	0f 93       	push	r16
 dc2:	1f 93       	push	r17
 dc4:	cf 93       	push	r28
 dc6:	df 93       	push	r29
 dc8:	cd b7       	in	r28, 0x3d	; 61
 dca:	de b7       	in	r29, 0x3e	; 62
 dcc:	ca 1b       	sub	r28, r26
 dce:	db 0b       	sbc	r29, r27
 dd0:	0f b6       	in	r0, 0x3f	; 63
 dd2:	f8 94       	cli
 dd4:	de bf       	out	0x3e, r29	; 62
 dd6:	0f be       	out	0x3f, r0	; 63
 dd8:	cd bf       	out	0x3d, r28	; 61
 dda:	09 94       	ijmp

00000ddc <__epilogue_restores__>:
 ddc:	2a 88       	ldd	r2, Y+18	; 0x12
 dde:	39 88       	ldd	r3, Y+17	; 0x11
 de0:	48 88       	ldd	r4, Y+16	; 0x10
 de2:	5f 84       	ldd	r5, Y+15	; 0x0f
 de4:	6e 84       	ldd	r6, Y+14	; 0x0e
 de6:	7d 84       	ldd	r7, Y+13	; 0x0d
 de8:	8c 84       	ldd	r8, Y+12	; 0x0c
 dea:	9b 84       	ldd	r9, Y+11	; 0x0b
 dec:	aa 84       	ldd	r10, Y+10	; 0x0a
 dee:	b9 84       	ldd	r11, Y+9	; 0x09
 df0:	c8 84       	ldd	r12, Y+8	; 0x08
 df2:	df 80       	ldd	r13, Y+7	; 0x07
 df4:	ee 80       	ldd	r14, Y+6	; 0x06
 df6:	fd 80       	ldd	r15, Y+5	; 0x05
 df8:	0c 81       	ldd	r16, Y+4	; 0x04
 dfa:	1b 81       	ldd	r17, Y+3	; 0x03
 dfc:	aa 81       	ldd	r26, Y+2	; 0x02
 dfe:	b9 81       	ldd	r27, Y+1	; 0x01
 e00:	ce 0f       	add	r28, r30
 e02:	d1 1d       	adc	r29, r1
 e04:	0f b6       	in	r0, 0x3f	; 63
 e06:	f8 94       	cli
 e08:	de bf       	out	0x3e, r29	; 62
 e0a:	0f be       	out	0x3f, r0	; 63
 e0c:	cd bf       	out	0x3d, r28	; 61
 e0e:	ed 01       	movw	r28, r26
 e10:	08 95       	ret

00000e12 <_exit>:
 e12:	f8 94       	cli

00000e14 <__stop_program>:
 e14:	ff cf       	rjmp	.-2      	; 0xe14 <__stop_program>
